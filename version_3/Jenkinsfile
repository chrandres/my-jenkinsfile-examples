pipeline {
  agent any
  stages {
    stage('Build') {
      steps {
        sh "cd version_${env.jenkinsfile_version} && docker build -t ${env.RepoDockerHub}/${env.NameContainer}:v3.${env.BUILD_NUMBER} ."
      }
    }

    stage('CI') {
      steps {
        sh "docker run --rm ${env.RepoDockerHub}/${env.NameContainer}:v3.${env.BUILD_NUMBER}"
      }
    }

    stage('Login to Dockerhub') {
      steps {
        sh "echo $Dockerhub_Credentials_PSW | docker login -u $Dockerhub_Credentials_USR --password-stdin"
      }
    }

    stage('Push image to Dockerhub') {
      steps {
        script {
          def approver = input message: 'Â¿Push a Dockerhub?', submitterParameter: 'approver', ok: 'Si'
        }
        sh "docker push ${env.RepoDockerHub}/${env.NameContainer}:v3.${env.BUILD_NUMBER}"
      }
    }

    stage('Clean dangling images') {
      steps {
        sh "docker rmi ${env.RepoDockerHub}/${env.NameContainer}:v3.${env.BUILD_NUMBER}"
      }
    }

  }
  
  post {
    always {
      echo 'Pasando la escoba...'
      sh " docker system prune -af"
      sh " docker volume prune -f"
      sh " docker network prune -f"
      deleteDir() /* eliminar el workspace */
    }
  }
  environment {
    RepoDockerHub = 'chrwandres'
    NameContainer = 'nodeapp_edit'
    Dockerhub_Credentials = credentials('dockerhub_user')
    jenkinsfile_version = '3'
  }
}
